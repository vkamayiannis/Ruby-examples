Print the contents of an array of sixteen numbers, four numbers
at a time, using just each. Now, do the same with each_slice in
Enumerable.
• The Tree class was interesting, but it did not allow you to specify
a new tree with a clean user interface. Let the initializer accept a
nested structure with hashes and arrays. You should be able to
specify a tree like this: {’grandpa’ => {’ dad’ => {’child 1’ => {}, ’child
2’ => {} }, ’uncle’ => {’child 3’ => {}, ’child 4’ => {} } } }.
• Write a simple grep that will print the lines of a file having any
occurrences of a phrase anywhere in that line. You will need to do
a simple regular expression match and read lines from a file. (This
is surprisingly simple in Ruby.) If you want, include line numbers.
The whole point of Mary Poppins is that she made the household better
as a whole by making it fun and changing the hearts of the people in
it with passion and imagination. You could back off a little and play it
safe, using Ruby to do the same things you already know how to do
in other languages. But when you change the way a language looks
and works, you can capture magic that makes programming fun. In
this book, each chapter will show you some nontrivial problem that the
language solves well. In Ruby, that means metaprogramming.
Metaprogramming means writing programs that write programs. The
ActiveRecord framework that’s the centerpiece of Rails uses metaprogramming
to implement a friendly language for building classes that
link to database tables. An ActiveRecord class for a Department might
look like this:
class Department < ActiveRecord::Base
has_many :employees
has_one :manager
end